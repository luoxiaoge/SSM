<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关参数properties的属性：${url} -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 2.数据库连接池 -->
<!--	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		&lt;!&ndash; 配置连接池属性 &ndash;&gt;
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		&lt;!&ndash; c3p0连接池的私有属性 &ndash;&gt;
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		&lt;!&ndash; 关闭连接后不自动commit &ndash;&gt;
		<property name="autoCommitOnClose" value="false" />
		&lt;!&ndash; 获取连接超时时间 &ndash;&gt;
		<property name="checkoutTimeout" value="10000" />
		&lt;!&ndash; 当获取连接失败重试次数 &ndash;&gt;
		<property name="acquireRetryAttempts" value="2" />
	</bean>-->


	<!-- 2.数据库连接池 -->
	<bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url1}" />
		<property name="user" value="${jdbc.username1}" />
		<property name="password" value="${jdbc.password1}" />

		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="10000" />
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>


	<!-- 2.数据库连接池 -->
	<bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url2}" />
		<property name="user" value="${jdbc.username2}" />
		<property name="password" value="${jdbc.password2}" />

		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="10000" />
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>

    <bean id = "hashFunction" class="com.soecode.lyf.Utils.HashFunction"/>

	<!--<bean id="internalRouter"
		  class="com.soecode.lyf.Utils.InteralRouterXmlFactoryBean">
		&lt;!&ndash; functionsMap是在使用自定义路由规则函数的时候使用 &ndash;&gt;
		<property name="functionsMap">
			<map>
				<entry key="hash" value-ref="hashFunction"></entry>
			</map>
		</property>
		<property name="configLocations">
			<list>
				&lt;!&ndash; 路由规则文件 &ndash;&gt;
				<value>classpath:rule/rules.xml</value>
			</list>
		</property>
	</bean>-->
	<bean id="dynamicDataSource" class="com.soecode.lyf.annotation.mysqlDynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="db1" value-ref="dataSource1"/>
				<entry key="db2" value-ref="dataSource2"/>
			</map>
		</property>
	<!--	<property name="defaultTargetDataSource" ref="dataSource"/>-->
	</bean>


	<bean id="dbRuleSet" class="com.soecode.lyf.annotation.RouterSet">
		<property name="routeFieldStart" value="0"></property>
		<property name="routeFieldEnd" value="9200000000000000000"></property>
		<property name="dbNumber" value="2"></property>
		<property name="routeType" value="2"></property>
		<property name="ruleType" value="2"></property>
		<property name="tableNumber" value="5"></property>
		<property name="dbKeyArray">
			<list>
				<value>db1</value>
				<value>db2</value>
			</list>
		</property>
	</bean>

	<bean id="dBRouter" class="com.soecode.lyf.annotation.DbRouterImpl">
		<property name="routerSetList">
			<!-- 标识符类型 -->
			<list>
				<ref bean="dbRuleSet"/>
			</list>
		</property>
	</bean>



	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>

	<!-- 配置基于注解的声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />




	<!-- 3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dynamicDataSource" />
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="com.soecode.lyf.entity" />
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.soecode.lyf.dao" />
	</bean>
</beans>